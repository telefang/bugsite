.PHONY: all compare_completeness compare_correctness clean patch alpha beta

.SUFFIXES:
.SUFFIXES: .asm .o .gbc .png .wav .wikitext .atbl
.SECONDEXPANSION:

BASE_DIR := baseroms
BUILD_DIR := build_patch

ROMS_ALPHA := ${BUILD_DIR}/bugsite_alpha_en.gbc
BASEROM_ALPHA := ${BASE_DIR}/baserom_alpha.gbc
ROMS_BETA := ${BUILD_DIR}/bugsite_beta_en.gbc
BASEROM_BETA := ${BASE_DIR}/baserom_beta.gbc

OBJS := component/bugvm/decode.o component/bugvm/optable.o component/bugvm/vm_state.o \
        component/bugvm/datastack.o component/bugvm/predicate.o \
        component/windowmanager/contents_config.o component/windowmanager/drawframe.o \
        component/windowmanager/menu_config.o component/windowmanager/print_tools.o \
        component/windowmanager/cursor.o component/windowmanager/winclr.o \
        component/windowmanager/choices.o \
        component/mainscript/window.o component/mainscript/scene.o \
		  component/lcdc/poke.o component/lcdc/vmemcopy.o \
        component/system/banking.o component/system/version.o \
        component/bugfs/indexlinkage.o \
        component/mainscript/player_name.o \
        component/nameinput/string_temporary.o component/nameinput/nickname_datablock.o \
        component/mobilemenu/vars.o \
        component/patchsupport/patchtbl.o component/patchsupport/pointcut.o \
        component/patchsupport/readfile.o component/patchsupport/custom_opcode.o \
        component/windowmanager/vwf_advice.o
OBJS_ALPHA := 
OBJS_BETA := 
OBJS_ALL := ${OBJS} ${OBJS_ALPHA} ${OBJS_BETA}

#Directory objects have to be treated separately since this makefile would
#otherwise attempt to run it through rgbasm and wonder why there's no .asm file
OBJS_DIR_ALPHA := versions/alpha/component/bugfs/directory.bugfs.o
OBJS_DIR_BETA := versions/beta/component/bugfs/directory.bugfs.o
OBJS_DIR_ALL := ${OBJS_DIR_ALPHA} ${OBJS_DIR_BETA}

OBJS_EXTRA := versions/alpha/script/encounters.atbl.o versions/beta/script/encounters.atbl.o \
	versions/alpha/script/monsters.atbl.o versions/beta/script/monsters.atbl.o \
	script/chips.atbl.o script/keyitems.atbl.o script/moves.atbl.o

#Only Python 3 is supported this time.
PYTHON := utilities/find_python.sh
PRET := pokemon-reverse-engineering-tools/pokemontools

$(foreach obj, $(OBJS), \
	$(eval $(obj:.o=)_dep := $(addprefix ${BUILD_DIR}/,$(shell $(PYTHON) utilities/scan_includes.py $(obj:.o=.asm)))) \
)

$(foreach obj, $(OBJS_ALPHA), \
	$(eval $(obj:.o=)_dep := $(addprefix ${BUILD_DIR}/,$(shell $(PYTHON) utilities/scan_includes.py $(obj:.o=.asm)))) \
)

$(foreach obj, $(OBJS_BETA), \
	$(eval $(obj:.o=)_dep := $(addprefix ${BUILD_DIR}/,$(shell $(PYTHON) utilities/scan_includes.py $(obj:.o=.asm)))) \
)

$(foreach obj, $(OBJS_DIR_ALL), \
	$(eval $(obj:.bugfs.o=)_dep := $(shell $(PYTHON) utilities/bfsdeps.py $(obj:.bugfs.o=.bfs) --basedir=$(BUILD_DIR) --basedir=.)) \
)

# Link objects together to build a rom.
all: alpha beta

alpha: $(ROMS_ALPHA)

beta: $(ROMS_BETA)

# Assemble source files into objects.
$(OBJS_ALL:%.o=${BUILD_DIR}/%.o): $(BUILD_DIR)/%.o : %.asm $$($$*_dep)
	@echo "Assembling" $<
	@mkdir -p $(dir $@)
	@rgbasm -o $@ $<

$(OBJS_EXTRA:%.atbl.o=${BUILD_DIR}/%.atbl.o): $(BUILD_DIR)/%.atbl.o : $(BUILD_DIR)/%.atbl $$($$*_dep)
	@echo "Assembling" $<
	@mkdir -p $(dir $@)
	@rgbasm -o $@ $<

# Assemble the BugFS directory...
$(OBJS_DIR_ALL:%.bugfs.o=${BUILD_DIR}/%.bugfs.o): $(BUILD_DIR)/%.bugfs.o : $(BUILD_DIR)/%.bfsasm $$($$*_dep)
	@echo "Assembling built BugFS filesystem" $<
	@mkdir -p $(dir $@)
	@rgbasm -o $@ $<

$(ROMS_ALPHA): $(OBJS:%.o=${BUILD_DIR}/%.o) $(OBJS_DIR_ALPHA:%.o=${BUILD_DIR}/%.o) $(OBJS_ALPHA:%.o=${BUILD_DIR}/%.o) $(OBJS_EXTRA:%.o=${BUILD_DIR}/%.o)
	rgblink -n $(ROMS_ALPHA:.gbc=.sym) -m $(ROMS_ALPHA:.gbc=.map) -O $(BASEROM_ALPHA) -o $@ $^
	rgbfix -v -C -i BAUJ -k 2N -l 0x33 -m 0x1B -p 0 -r 3 -t "BUGSITE ALP" $@

$(ROMS_BETA): $(OBJS:%.o=${BUILD_DIR}/%.o) $(OBJS_DIR_BETA:%.o=${BUILD_DIR}/%.o) $(OBJS_BETA:%.o=${BUILD_DIR}/%.o) $(OBJS_EXTRA:%.o=${BUILD_DIR}/%.o)
	rgblink -n $(ROMS_BETA:.gbc=.sym) -m $(ROMS_BETA:.gbc=.map) -O $(BASEROM_BETA) -o $@ $^
	rgbfix -v -C -i BBUJ -k 2N -l 0x33 -m 0x1B -p 0 -r 3 -t "BUGSITE BET" $@

# Remove files generated by the build process.
clean:
	rm -r build

#This rule is needed if we want make to not die. It expects to see .inc files in
#the build directory now that we moved all resources there. We DO want to see
#.inc files as dependencies but I can't be arsed to fiddle with any more arcane
#makefile bullshit to get it to not prefix .inc files.
$(BUILD_DIR)/%.inc: %.inc
	@mkdir -p $(dir $@)
	@cp $< $@

$(BUILD_DIR)/%.2bpp: %.png
	@echo "Building" $<
	@mkdir -p $(dir $@)
	@rgbgfx -d 2 -c hex:graphics/grayscale.pal -o $@ $<

$(BUILD_DIR)/%.1bpp: %.png
	@echo "Building" $<
	@mkdir -p $(dir $@)
	@rgbgfx -d 1 -o $@ $<

$(BUILD_DIR)/%.bof: %.bvm
	@echo "Assembling" $<
	@mkdir -p $(dir $@)
	@$(PYTHON) utilities/bvmasm.py $< --deffile script/bugvm_strings_npc.csv --deffile script/bugvm_strings_story.csv --deffile script/bugvm_strings_system.csv --autobalance --metrics component/mainscript/themes/normal/metrics.bfont --opcode_tbl utilities/opcodes_bugsite_patch.json --language English script/charmap.txt $@

$(BUILD_DIR)/%.metrics: %.bfont
	@echo "Compiling font metrics from " $<
	@mkdir -p $(dir $@)
	@$(PYTHON) utilities/bfontmetrics.py $< script/charmap.txt $@

$(BUILD_DIR)/%.spranim.bof: %.banim
	@echo "Assembling" $<
	@mkdir -p $(dir $@)
	@$(PYTHON) utilities/banimasm.py $< $@

$(BUILD_DIR)/%.tmap.bin: %.btmap.csv
	@echo "Assembling" $<
	@mkdir -p $(dir $@)
	@$(PYTHON) utilities/btmapasm.py $< $@

$(BUILD_DIR)/%.metrics: %.bfont
	@echo "Compiling font metrics from " $<
	@mkdir -p $(dir $@)
	@$(PYTHON) utilities/bfontmetrics.py $< script/charmap.txt $@

$(BUILD_DIR)/%.palette.bin: %.bpal
	@echo "Assembling" $<
	@mkdir -p $(dir $@)
	@$(PYTHON) utilities/bpalasm.py $< $@

$(BUILD_DIR)/%.atbl: %.csv
	@echo "Building" $<
	@mkdir -p $(dir $@)
	@$(PYTHON) utilities/montable_compile.py --language=English $< script/charmap.txt $@

$(BUILD_DIR)/%.bfsasm: %.bfs $$($$*_dep)
	@echo "Building BugFS filesystem" $<
	@mkdir -p $(dir $@)
	@$(PYTHON) utilities/bfsbuild.py $< $@ --basedir=$(BUILD_DIR) --basedir=.
